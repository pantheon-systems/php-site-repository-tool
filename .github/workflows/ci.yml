on:
  push:

name: CI

jobs:
  checkout_build:
    runs-on: ubuntu-latest
    name: Checkout & build Phar
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none
      - name: Install composer dependencies
        run: composer install
      - name: Phar Build
        run: |
          composer configure-for-php-version
          composer phar:install-tools
          composer phar:build
      - name: Save site-repository-tool.phar as artifact
        uses: actions/upload-artifact@v3
        with:
          name: site-repository-tool.phar
          path: site-repository-tool.phar
          if-no-files-found: error

  coding-guidelines:
    name: Coding Guidelines

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-progress

      - name: Run phpcs
        run: composer cs

      - name: Run linter
        run: composer lint

  tests:
    name: Tests

    runs-on: ${{ matrix.os }}

    env:
      PHP_EXTENSIONS: dom, json, libxml, mbstring, pdo_sqlite, soap, xml, xmlwriter
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php-version:
          - "5.6"
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"

        php-ini-values:
          - assert.exception=1, zend.assertions=1, phar.readonly=false, variables_order="EGPCS"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ matrix.php-ini-values }}

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php-version }}}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-

      - name: Make sure composer.json is valid
        run: composer validate

      - name: Install dependencies with Composer, so that composer-test-scenarios is available
        run: composer install

      - name: Update dependencies with composer-test-scenarios
        run: composer configure-for-php-version

      - name: Setup git on current runner
        run: |
          git config --global user.email "ci@pantheon.io"
          git config --global user.name "Pantheon CI"

      - name: Show environment
        run: env

      - name: Show installed dependencies
        run: composer info

      - name: Run tests with phpunit
        run: composer unit

      - name: Publish code coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.php-version == '8.0'
        run: bash <(curl -s https://codecov.io/bash)

  release:
    runs-on: ubuntu-latest
    name: Release
    container:
      image: quay.io/pantheon-public/php-ci:1.x
    needs: [ tests ]
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository == 'pantheon-systems/php-site-repository-tool' }}
    steps:
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v3
        with:
          name: site-repository-tool.phar
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: site-repository-tool.phar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
